{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../servicio.service\";\nclass RutFormComponent {\n  constructor(router, service) {\n    this.router = router;\n    this.service = service;\n    this.Brut = new FormGroup({\n      rut: new FormControl(\"\", Validators.required)\n    });\n  }\n  enviarrut() {\n    if (this.Brut.status === 'INVALID') {\n      alert(\"Campos Incompletos\");\n    } else if (this.Brut.status === \"VALID\") {\n      this.rut = this.Brut.value.rut;\n      this.service.setrut(this.rut);\n      this.router.navigate([\"guardado\"]);\n    }\n  }\n  ngOnInit() {}\n}\nRutFormComponent.ɵfac = function RutFormComponent_Factory(t) {\n  return new (t || RutFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Ser));\n};\nRutFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RutFormComponent,\n  selectors: [[\"app-rut-form\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"propietario\", \"placeholder\", \"Nombre del propietario\"], [\"type\", \"submit\"]],\n  template: function RutFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Formulario RUT\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RutFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.enviarrut();\n      });\n      i0.ɵɵelement(3, \"input\", 1)(4, \"br\");\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵtext(6, \"Guardar Propiedad\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.Brut);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RutFormComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","RutFormComponent","constructor","router","service","Brut","rut","required","enviarrut","status","alert","value","setrut","navigate","ngOnInit","i0","ɵɵdirectiveInject","i1","Router","i2","Ser","selectors","decls","vars","consts","template","RutFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RutFormComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\nacho\\OneDrive\\Escritorio\\Lab2_RegistroCivil\\src\\app\\rut-form\\rut-form.component.ts","C:\\Users\\nacho\\OneDrive\\Escritorio\\Lab2_RegistroCivil\\src\\app\\rut-form\\rut-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\"\n\nimport { Ser } from '../servicio.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-rut-form',\n  templateUrl: './rut-form.component.html',\n  styleUrls: ['./rut-form.component.css']\n})\n\nexport class RutFormComponent {\n  rut: any;\n\n  constructor(public router: Router,private service: Ser) { }\n\n  Brut= new FormGroup({\n    rut: new FormControl(\"\",Validators.required)\n  })\n  \n\n  enviarrut(){\n  if(this.Brut.status === 'INVALID'){\n    alert(\"Campos Incompletos\")}\n  else if(this.Brut.status === \"VALID\"){\n    this.rut = this.Brut.value.rut\n    this.service.setrut(this.rut)\n    this.router.navigate([\"guardado\"]);\n  }\n  }\n  ngOnInit(): void {\n  }\n\n}","<h2>Formulario RUT</h2>\n\n<form [formGroup]=\"Brut\" (ngSubmit)=\"enviarrut()\">\n    <input type=\"text\" formControlName=\"propietario\" placeholder=\"Nombre del propietario\">\n    <br>\n    <button type=\"submit\">Guardar Propiedad</button>\n</form>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAKnE,MAMaC,gBAAgB;EAG3BC,YAAmBC,MAAc,EAASC,OAAY;IAAnC,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,OAAO,GAAPA,OAAO;IAEjD,KAAAC,IAAI,GAAE,IAAIN,SAAS,CAAC;MAClBO,GAAG,EAAE,IAAIR,WAAW,CAAC,EAAE,EAACE,UAAU,CAACO,QAAQ;KAC5C,CAAC;EAJwD;EAO1DC,SAASA,CAAA;IACT,IAAG,IAAI,CAACH,IAAI,CAACI,MAAM,KAAK,SAAS,EAAC;MAChCC,KAAK,CAAC,oBAAoB,CAAC;KAAC,MACzB,IAAG,IAAI,CAACL,IAAI,CAACI,MAAM,KAAK,OAAO,EAAC;MACnC,IAAI,CAACH,GAAG,GAAG,IAAI,CAACD,IAAI,CAACM,KAAK,CAACL,GAAG;MAC9B,IAAI,CAACF,OAAO,CAACQ,MAAM,CAAC,IAAI,CAACN,GAAG,CAAC;MAC7B,IAAI,CAACH,MAAM,CAACU,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;;EAEpC;EACAC,QAAQA,CAAA,GACR;;AApBWb,gBAAgB,C;mBAAhBA,gBAAgB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,GAAA;AAAA;AAAhBnB,gBAAgB,C;QAAhBA,gBAAgB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ7BZ,EAAA,CAAAc,cAAA,SAAI;MAAAd,EAAA,CAAAe,MAAA,qBAAc;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MAEvBhB,EAAA,CAAAc,cAAA,cAAkD;MAAzBd,EAAA,CAAAiB,UAAA,sBAAAC,mDAAA;QAAA,OAAYL,GAAA,CAAApB,SAAA,EAAW;MAAA,EAAC;MAC7CO,EAAA,CAAAmB,SAAA,eAAsF;MAEtFnB,EAAA,CAAAc,cAAA,gBAAsB;MAAAd,EAAA,CAAAe,MAAA,wBAAiB;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MAH9ChB,EAAA,CAAAoB,SAAA,GAAkB;MAAlBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAAvB,IAAA,CAAkB;;;;;SDUXJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}